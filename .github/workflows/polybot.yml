name: Build and Push Polybot

on:
  push:
    branches: [main]
    paths:
      - 'polybot/**'
      - '.github/workflows/polybot.yml'  # Include workflow file itself
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Polybot Repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get Latest Tag from Docker Hub
        id: get-latest-tag
        run: |
          echo "Checking for existing tags on guymeltzer/polybot..."
          RESPONSE=$(curl -s "https://hub.docker.com/v2/repositories/guymeltzer/polybot/tags/?page_size=100&ordering=last_updated")
          echo "Full API response:"
          echo "$RESPONSE"

          # Check if response has results
          if [[ "$RESPONSE" == *"\"results\":"* ]] && [[ "$RESPONSE" != *"\"results\":[]"* ]]; then
            echo "Valid results found, parsing tags..."
            ALL_TAGS=$(echo "$RESPONSE" | jq -r '.results[].name')
            if [ $? -ne 0 ]; then
              echo "Error: Failed to parse tags with jq"
              exit 1
            fi
            echo "All available tags: $ALL_TAGS"

            VERSION_TAGS=$(echo "$ALL_TAGS" | grep -E '^1\.0\.[0-9]+$')
            echo "Version tags: $VERSION_TAGS"

            LATEST_TAG=$(echo "$VERSION_TAGS" | sort -V | tail -n 1)
            echo "Determined latest tag: $LATEST_TAG"
          else
            echo "No valid results found in API response."
            LATEST_TAG=""
          fi

          # Fallback if no valid tag found
          if [ -z "$LATEST_TAG" ]; then
            echo "Falling back to default tag 1.0.127"
            LATEST_TAG="1.0.127"
          fi

          PATCH_VERSION=$(echo "$LATEST_TAG" | cut -d'.' -f3)
          NEW_PATCH=$((PATCH_VERSION + 1))
          NEW_TAG="1.0.$NEW_PATCH"
          echo "Latest tag: $LATEST_TAG, New tag: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: polybot/
          push: true
          tags: |
            guymeltzer/polybot:${{ steps.get-latest-tag.outputs.NEW_TAG }}
            guymeltzer/polybot:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Checkout Manifests Repo
        uses: actions/checkout@v3
        with:
          repository: guymeltzer/PolybotInfra
          token: ${{ secrets.MANIFEST_TOKEN }}  # Personal Access Token with repo scope
          path: manifests

      - name: Update Deployment with New Tag
        run: |
          DEPLOYMENT_PATH="manifests/k8s/Polybot/deployment.yaml"
          echo "Updating $DEPLOYMENT_PATH with new tag: ${{ steps.get-latest-tag.outputs.NEW_TAG }}"
          sed -i "s|guymeltzer/polybot:.*|guymeltzer/polybot:${{ steps.get-latest-tag.outputs.NEW_TAG }}|" "$DEPLOYMENT_PATH"
          cat "$DEPLOYMENT_PATH"

      - name: Commit and Push Manifest Changes
        run: |
          cd manifests
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add k8s/Polybot/deployment.yaml
          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update polybot to ${{ steps.get-latest-tag.outputs.NEW_TAG }}"
            git push
          fi
